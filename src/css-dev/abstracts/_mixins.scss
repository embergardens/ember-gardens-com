@mixin breakpoint($bp, $rule: min-width) {
   @media screen and (#{$rule}: map-get($breakpoints, $bp)) {
      @content;
   }
}

@mixin eyebrow() {
   @include pseudo-link( $z: -1 );
   @include theme-text( 'reverse' );
   display: inline-block;
   font-size: var(--fontSize-16);
   font-weight: var(--fontWeight-bold);
   opacity: 0.6;
   padding: 0.5rem var(--fontSize-18);
   position: relative;
   text-transform: uppercase;

   &::after {
      @include theme-text();
      background: currentColor;
   }
}

@mixin intro() {
   @include theme-text('1');
   font-size: var(--fontSize-20);
   font-weight: var(--fontWeight-light);
   line-height: var(--lineHeight-heading);

   @include breakpoint( sm ) {
      font-size: var(--fontSize-22);
   }

   @include breakpoint( md ) {
      font-size: var(--fontSize-24);
   }

   @include breakpoint( xl ) {
      font-size: var(--fontSize-26);
   }
}

@mixin link-style() {
   @include theme-text('accent');
   font-weight: 600;
   position: relative;

   &:hover,
   &:focus {
      &::after {
         transform: scaleX( 1 );
         transform-origin: right center;
      }
   }

   &::after {
      background: var(--theme-color-accent);
      bottom: -1px;
      content: '';
      height: 2px;
      left: 0;
      position: absolute;
      transform: scaleX( 0 );
      transform-origin: left center;
      transition: background var(--theme-transition-speed) $e-in-out, transform 300ms $e-in-out;
      right: 0;
      width: 100%;
   }
}

@mixin focus-style( $offset: 3px, $color: currentColor ) {
   outline: 3px solid $color;
   outline-offset: $offset;

   [data-whatintent='mouse'] & {
      outline: none;
   }
}

@mixin doubleArrow-link-style() {
   @include theme-text();
   align-items: center;
   display: flex;
   font-size: var(--fontSize-16);
   font-weight: var(--fontWeight-bold);
   line-height: 1;

   span {
      @include theme-text('accent');
      @include svg-contain( 15px, 15px );
      margin: 0 0 0 0.5em;
   }
}

@mixin primary-gradient( $angle: 90deg ) {
   @include linear-gradient( $angle, $c-plum, $c-rose, $c-coral  );
}

@mixin pseudo-link( $z: 1 ) {
   &::after {
      bottom: 0;
      content: '';
      left: 0;
      position: absolute;
      right: 0;
      top: 0;
      z-index: #{ $z };
   }
}

@mixin svg-contain( $width,$height: auto ) {
   height: #{ $height };
   object-fit: contain;
   width: #{ $width };

   svg {
      height: 100%;
      width: 100%;
   }
}

@mixin theme-text( $shade: '0', $transition: true ) {
   color: var( --theme-color-#{ $shade } );

   @if ( $transition ) {
      transition: color var(--theme-transition-speed) $e-out;
   }
}

@mixin viewport() {
   height: $mobileHeight;
   overflow-x: hidden;
	overflow-y: auto;
   width: 100vw;

   @include breakpoint( md ) {
      height: var( --vh );
      width: $desktopWidth;
   }
}

@mixin visuallyhidden {
   border: 0;
   clip: rect(0 0 0 0);
   height: 1px;
   margin: -1px;
   overflow: hidden;
   padding: 0;
   position: absolute;
   width: 1px;
}